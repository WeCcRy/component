import { NodeTransform, PlainElementNode, ComponentNode, SlotOutletNode, TemplateNode, TransformContext } from '@vue/compiler-core';

type Prefix = "::" | "$" | "*";
interface Options {
	/**
	* @default '$'
	*/
	prefix?: Prefix;
}
type NodeElement = PlainElementNode | ComponentNode | SlotOutletNode | TemplateNode;
declare function transformShortVmodel({ prefix }?: Options): NodeTransform;
declare function processDirective(node: NodeElement): void;
declare function processAttribute(prefix: string, node: NodeElement, context: TransformContext): void;

export { processAttribute, processDirective, transformShortVmodel };
export type { Options, Prefix };
