import {
  transformDefineEmit
} from "./chunk-WGHC63BQ.js";

// src/index.ts
import process from "node:process";
import {
  createFilter,
  detectVueVersion,
  FilterFileType,
  getFilterPattern
} from "@vue-macros/common";
import {
  createUnplugin
} from "unplugin";
function resolveOptions(options, framework) {
  const version = options.version || detectVueVersion();
  const include = getFilterPattern(
    [FilterFileType.VUE_SFC_WITH_SETUP, FilterFileType.SETUP_SFC],
    framework
  );
  return {
    include,
    isProduction: process.env.NODE_ENV === "production",
    ...options,
    version
  };
}
var name = "unplugin-vue-define-emit";
var plugin = createUnplugin(
  (userOptions = {}, { framework }) => {
    const options = resolveOptions(userOptions, framework);
    const filter = createFilter(options);
    return {
      name,
      enforce: "pre",
      transformInclude: filter,
      transform: transformDefineEmit,
      vite: {
        configResolved(config) {
          options.isProduction ??= config.isProduction;
        }
      }
    };
  }
);
var index_default = plugin;

export {
  index_default
};
