import { P as PluginType, O as OptionsPlugin, R as RemoveFalsy, a as PluginMap, F as Factory, U as UnpluginCombineInstance } from './types.d-BX6tanE5.js';
export { A as Awaitable, C as CombineOptions, d as FactoryOutput, c as Plugin, b as RspackPlugin, e as Unplugin, W as WebpackPlugin } from './types.d-BX6tanE5.js';
export { Plugin as EsbuildPlugin } from 'esbuild';
export { Plugin as RollupPlugin } from 'rollup';
export { Plugin as VitePlugin } from 'vite';
import '@rspack/core';
import 'rolldown';
import 'unplugin';
import 'webpack';

declare function resolvePlugins<T extends PluginType>(plugins: OptionsPlugin, type: T): Array<RemoveFalsy<PluginMap[T]>>;
declare const createCombinePlugin: <UserOptions>(factory: Factory<UserOptions>) => UnpluginCombineInstance<UserOptions>;
declare function getPluginList<UserOptions>(factory: Factory<UserOptions>): UnpluginCombineInstance<UserOptions>["plugins"];

export { Factory, OptionsPlugin, PluginMap, PluginType, RemoveFalsy, UnpluginCombineInstance, createCombinePlugin, getPluginList, resolvePlugins };
